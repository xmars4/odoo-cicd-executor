name: ci/cd
on:
    push:
        branches: "production"

env:
    # common environment variables
    REPO_PATH: ${{ github.workspace }}
    ODOO_CUSTOM_ADDONS_PATH: ${{ github.workspace }}
    ODOO_CONFIG_FILE: ${{ github.workspace }}/.github/odoo/etc/odoo.conf
    ODOO_DOCKER_COMPOSE_PATH: ${{ github.workspace }}/.github/odoo
    ODOO_DOCKER_COMPOSE_FILE: ${{ github.workspace }}/.github/odoo/docker-compose.yml
    ODOO_TEST_DATABASE_NAME: odoo_test
    ODOO_LOG_FILE_CONTAINER: /var/log/odoo/odoo.log
    ODOO_LOG_FILE_HOST: ${{ github.workspace }}/.github/odoo/logs/odoo.log

    CICD_ODOO_OPTIONS: ${{ github.workspace }}/.github/conf/odoo.json
    CICD_SCRIPTS_PATH: ${{ github.workspace }}/.github/scripts
    CICD_UTILS_SCRIPTS_PATH: ${{ github.workspace }}/.github/scripts/utils.sh

    ACCESS_TOKEN: ${{secrets.ACCESS_TOKEN}}
    DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

    # specific environment variables for each repo
    # get those values from designated 'environment' in jobs
    REPOSITORY: ${{ vars.PATH }}
    BRANCH: ${{ vars.BRANCH }}
    ODOO_IMAGE_TAG: ${{ vars.ODOO_IMAGE_TAG }}
    DB_IMAGE_TAG: ${{ vars.DB_IMAGE_TAG }}

jobs:
    pylint-test:
        runs-on: ubuntu-latest
        environment: ${{github.event.head_commit.message}}
        steps:
            - name: Checkout private repo
              uses: actions/checkout@v4
              with:
                  repository: ${{ env.REPOSITORY }}
                  token: ${{ env.ACCESS_TOKEN }}
                  path: ${{ env.REPO_PATH }}
                  ref: ${{ env.BRANCH }}
                  fetch-depth: 1

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ env.DOCKERHUB_USERNAME }}
                  password: ${{ env.DOCKERHUB_TOKEN }}

            - name: Prepare data
              run: |
                  ls $REPO_PATH
                  echo $HEY
                  bash $CICD_SCRIPTS_PATH/precheck-workflow.sh
                  bash $CICD_SCRIPTS_PATH/prepare-pylint-test.sh
            - uses: isbang/compose-action@v1.5.1
              with:
                  compose-file: ${{ env.ODOO_DOCKER_COMPOSE_FILE }}
                  up-flags: "--quiet-pull"
                  down-flags: "--volumes"

            - name: Run Pylint Test cases
              run: |
                  bash $CICD_SCRIPTS_PATH/run-pylint-test.sh
